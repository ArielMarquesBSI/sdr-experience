<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="howto__spectrum__sensing__cf_8h" kind="file">
    <compoundname>howto_spectrum_sensing_cf.h</compoundname>
    <includes local="no">gr_sync_decimator.h</includes>
    <includes local="no">gr_sync_block.h</includes>
    <includes local="no">gr_sync_interpolator.h</includes>
    <includes refid="howto__api_8h" local="no">howto_api.h</includes>
    <incdepgraph>
      <node id="17">
        <label>howto_api.h</label>
        <link refid="howto__api_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>gruel/attributes.h</label>
      </node>
      <node id="13">
        <label>/home/zz4fap/Dropbox/gnuradio/gr-howto/include/howto_spectrum_sensing_cf.h</label>
        <link refid="howto_spectrum_sensing_cf.h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>gr_sync_block.h</label>
      </node>
      <node id="16">
        <label>gr_sync_interpolator.h</label>
      </node>
      <node id="14">
        <label>gr_sync_decimator.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classhowto__spectrum__sensing__cf" prot="public">howto_spectrum_sensing_cf</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="howto__spectrum__sensing__cf_8h_1a58f4f29e68d41d73eac39e37922934bd" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classhowto__spectrum__sensing__cf" kindref="compound">howto_spectrum_sensing_cf</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;howto_spectrum_sensing_cf&gt; howto_spectrum_sensing_cf_sptr</definition>
        <argsstring></argsstring>
        <name>howto_spectrum_sensing_cf_sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zz4fap/Dropbox/gnuradio/gr-howto/include/howto_spectrum_sensing_cf.h" line="44" bodyfile="/home/zz4fap/Dropbox/gnuradio/gr-howto/include/howto_spectrum_sensing_cf.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="howto__spectrum__sensing__cf_8h_1a3930683395f0beb2f61d7bbca042c441" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__GR_ATTR_IMPORT <ref refid="howto__spectrum__sensing__cf_8h_1a58f4f29e68d41d73eac39e37922934bd" kindref="member">howto_spectrum_sensing_cf_sptr</ref></type>
        <definition>__GR_ATTR_IMPORT howto_spectrum_sensing_cf_sptr howto_make_spectrum_sensing_cf</definition>
        <argsstring>(float sample_rate, int ninput_samples, int nsub_bands, float pfd, float pfa, float tcme, bool debug_far, bool debug_stats)</argsstring>
        <name>howto_make_spectrum_sensing_cf</name>
        <param>
          <type>float</type>
          <declname>sample_rate</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ninput_samples</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nsub_bands</declname>
        </param>
        <param>
          <type>float</type>
          <declname>pfd</declname>
        </param>
        <param>
          <type>float</type>
          <declname>pfa</declname>
        </param>
        <param>
          <type>float</type>
          <declname>tcme</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug_far</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug_stats</declname>
        </param>
        <briefdescription>
<para>Return a shared_ptr to a new instance of <ref refid="classhowto__square__ff" kindref="compound">howto_square_ff</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>To avoid accidental use of raw pointers, <ref refid="classhowto__square__ff" kindref="compound">howto_square_ff</ref>&apos;s constructor is private. howto_make_square_ff is the public interface for creating new instances. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/zz4fap/Dropbox/gnuradio/gr-howto/include/howto_spectrum_sensing_cf.h" line="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2004<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDED_HOWTO_SPECTRUM_SENSING_CF_H</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_HOWTO_SPECTRUM_SENSING_CF_H</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_sync_decimator.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_sync_block.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_sync_interpolator.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_sync_block.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="howto__api_8h" kindref="compound">howto_api.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="howto__spectrum__sensing__cf_8h_1a58f4f29e68d41d73eac39e37922934bd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhowto__spectrum__sensing__cf" kindref="compound">howto_spectrum_sensing_cf</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>We<sp/>use<sp/>boost::shared_ptr&apos;s<sp/>instead<sp/>of<sp/>raw<sp/>pointers<sp/>for<sp/>all<sp/>access</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>to<sp/>gr_blocks<sp/>(and<sp/>many<sp/>other<sp/>data<sp/>structures).<sp/><sp/>The<sp/>shared_ptr<sp/>gets</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>us<sp/>transparent<sp/>reference<sp/>counting,<sp/>which<sp/>greatly<sp/>simplifies<sp/>storage</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>management<sp/>issues.<sp/><sp/>This<sp/>is<sp/>especially<sp/>helpful<sp/>in<sp/>our<sp/>hybrid</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>C++<sp/>/<sp/>Python<sp/>system.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>See<sp/>http://www.boost.org/libs/smart_ptr/smart_ptr.htm</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>As<sp/>a<sp/>convention,<sp/>the<sp/>_sptr<sp/>suffix<sp/>indicates<sp/>a<sp/>boost::shared_ptr</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;howto_spectrum_sensing_cf&gt;<sp/><ref refid="howto__spectrum__sensing__cf_8h_1a58f4f29e68d41d73eac39e37922934bd" kindref="member">howto_spectrum_sensing_cf_sptr</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="howto__api_8h_1a7a9fda890b8e28fac667cbd66796f13b" kindref="member">HOWTO_API</ref><sp/><ref refid="howto__spectrum__sensing__cf_8h_1a58f4f29e68d41d73eac39e37922934bd" kindref="member">howto_spectrum_sensing_cf_sptr</ref><sp/><ref refid="howto__spectrum__sensing__cf_8h_1a3930683395f0beb2f61d7bbca042c441" kindref="member" tooltip="Return a shared_ptr to a new instance of howto_square_ff.">howto_make_spectrum_sensing_cf</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classhowto__spectrum__sensing__cf_1a3419633d9c907c170deccc7c21dd70f0" kindref="member">sample_rate</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classhowto__spectrum__sensing__cf_1ac1962478c1c3e610f19dde8477f87a5b" kindref="member">ninput_samples</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classhowto__spectrum__sensing__cf_1a42c5d5bcff8293f7547fec96a99b206e" kindref="member">nsub_bands</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classhowto__spectrum__sensing__cf_1aa84f094ec15e02842ada20895a884153" kindref="member">pfd</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classhowto__spectrum__sensing__cf_1a5db14e520f46a4f8f0082fc022171e4b" kindref="member">pfa</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classhowto__spectrum__sensing__cf_1ab0eadd53bd54b3580306e290cebf6a44" kindref="member">tcme</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug_far,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug_stats);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classhowto__spectrum__sensing__cf" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="howto__api_8h_1a7a9fda890b8e28fac667cbd66796f13b" kindref="member">HOWTO_API</ref><sp/><ref refid="classhowto__spectrum__sensing__cf" kindref="compound">howto_spectrum_sensing_cf</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>gr_sync_block</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>friend<sp/>declaration<sp/>allows<sp/>howto_make_spectrum_sensing_cf<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>access<sp/>the<sp/>private<sp/>constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="howto__api_8h_1a7a9fda890b8e28fac667cbd66796f13b" kindref="member">HOWTO_API</ref><sp/><ref refid="howto__spectrum__sensing__cf_8h_1a58f4f29e68d41d73eac39e37922934bd" kindref="member">howto_spectrum_sensing_cf_sptr</ref><sp/><ref refid="howto__spectrum__sensing__cf_8h_1a3930683395f0beb2f61d7bbca042c441" kindref="member" tooltip="Return a shared_ptr to a new instance of howto_square_ff.">howto_make_spectrum_sensing_cf</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sample_rate,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ninput_samples,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsub_bands,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pfd,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pfa,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tcme,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug_far,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug_stats);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d_sample_rate,<sp/>d_pfd,<sp/>d_pfa,<sp/>d_tcme,<sp/>d_false_alarm_rate,<sp/>d_correct_rejection_rate;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*segment,<sp/>*sorted_segment;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d_ninput_samples,<sp/>d_nsub_bands;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d_false_alarm_counter,<sp/>d_correct_rejection_counter,<sp/>d_trials_counter;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>d_debug_far,<sp/>d_debug_stats;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><ref refid="classhowto__spectrum__sensing__cf" kindref="compound">howto_spectrum_sensing_cf</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sample_rate,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ninput_samples,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsub_bands,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pfd,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pfa,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tcme,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug_far,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug_stats);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>private<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>segment_spectrum(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gr_complex<sp/>*in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vector_number);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sort_energy();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>calculate_noise_reference(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n_zref_segs);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>calculate_scale_factor(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>calculate_statistics(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>alpha,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zref,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>~<ref refid="classhowto__spectrum__sensing__cf" kindref="compound">howto_spectrum_sensing_cf</ref><sp/>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>public<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classhowto__spectrum__sensing__cf_1ac1962478c1c3e610f19dde8477f87a5b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classhowto__spectrum__sensing__cf_1ac1962478c1c3e610f19dde8477f87a5b" kindref="member">ninput_samples</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_ninput_samples;<sp/>}</highlight></codeline>
<codeline lineno="80" refid="classhowto__spectrum__sensing__cf_1a1c572b05c1f5907e74dac62cc2cf7bf2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhowto__spectrum__sensing__cf_1a1c572b05c1f5907e74dac62cc2cf7bf2" kindref="member">set_ninput_samples</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k)<sp/>{<sp/>d_ninput_samples<sp/>=<sp/>k;<sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82" refid="classhowto__spectrum__sensing__cf_1a3419633d9c907c170deccc7c21dd70f0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classhowto__spectrum__sensing__cf_1a3419633d9c907c170deccc7c21dd70f0" kindref="member">sample_rate</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_sample_rate;}</highlight></codeline>
<codeline lineno="83" refid="classhowto__spectrum__sensing__cf_1acb2cd215f9a4979279160725234c8322" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhowto__spectrum__sensing__cf_1acb2cd215f9a4979279160725234c8322" kindref="member">set_sample_rate</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rate)<sp/>{d_sample_rate<sp/>=<sp/>rate;}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classhowto__spectrum__sensing__cf_1a42c5d5bcff8293f7547fec96a99b206e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classhowto__spectrum__sensing__cf_1a42c5d5bcff8293f7547fec96a99b206e" kindref="member">nsub_bands</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_nsub_bands;}</highlight></codeline>
<codeline lineno="86" refid="classhowto__spectrum__sensing__cf_1a7d0a0710290756c02383d47e1248107d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhowto__spectrum__sensing__cf_1a7d0a0710290756c02383d47e1248107d" kindref="member">set_nsub_bands</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbands)<sp/>{d_nsub_bands<sp/>=<sp/>nbands;}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classhowto__spectrum__sensing__cf_1aa84f094ec15e02842ada20895a884153" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classhowto__spectrum__sensing__cf_1aa84f094ec15e02842ada20895a884153" kindref="member">pfd</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_pfd;}</highlight></codeline>
<codeline lineno="89" refid="classhowto__spectrum__sensing__cf_1a37753fb4170fa9ea3be94c291737bfed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhowto__spectrum__sensing__cf_1a37753fb4170fa9ea3be94c291737bfed" kindref="member">set_pfd</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>p)<sp/>{d_pfd<sp/>=<sp/>p;}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classhowto__spectrum__sensing__cf_1a5db14e520f46a4f8f0082fc022171e4b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classhowto__spectrum__sensing__cf_1a5db14e520f46a4f8f0082fc022171e4b" kindref="member">pfa</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_pfa;}</highlight></codeline>
<codeline lineno="92" refid="classhowto__spectrum__sensing__cf_1a66e0415e9032a6f665eff8e94378e009" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhowto__spectrum__sensing__cf_1a66e0415e9032a6f665eff8e94378e009" kindref="member">set_pfa</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>p)<sp/>{d_pfa<sp/>=<sp/>p;}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94" refid="classhowto__spectrum__sensing__cf_1ab0eadd53bd54b3580306e290cebf6a44" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classhowto__spectrum__sensing__cf_1ab0eadd53bd54b3580306e290cebf6a44" kindref="member">tcme</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_tcme;}</highlight></codeline>
<codeline lineno="95" refid="classhowto__spectrum__sensing__cf_1a333b51e388f27f2a486de7f9fce21224" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhowto__spectrum__sensing__cf_1a333b51e388f27f2a486de7f9fce21224" kindref="member">set_tcme</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tcme)<sp/>{d_tcme<sp/>=<sp/>tcme;}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97" refid="classhowto__spectrum__sensing__cf_1a366a97c9c9317be05c5a384018db29b9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classhowto__spectrum__sensing__cf_1a366a97c9c9317be05c5a384018db29b9" kindref="member">false_alarm_rate</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_false_alarm_rate;}</highlight></codeline>
<codeline lineno="98" refid="classhowto__spectrum__sensing__cf_1a9196579fe5dbbd416ff4da2803305ac0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classhowto__spectrum__sensing__cf_1a9196579fe5dbbd416ff4da2803305ac0" kindref="member">correct_rejection</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_correct_rejection_rate;}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Where<sp/>all<sp/>the<sp/>action<sp/>really<sp/>happens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>work<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gr_vector_const_void_star<sp/>&amp;input_items,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gr_vector_void_star<sp/>&amp;output_items);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDED_HOWTO_SPECTRUM_SENSING_CF_H<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/zz4fap/Dropbox/gnuradio/gr-howto/include/howto_spectrum_sensing_cf.h"/>
  </compounddef>
</doxygen>
